<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ApiRest</name>
    </assembly>
    <members>
        <member name="T:ApiRest.AutoMapperModelProfile">
            <summary>
            Class to manage the profile for automapper.
            </summary>
        </member>
        <member name="M:ApiRest.AutoMapperModelProfile.#ctor">
            <summary>
            Creates a new instance of <see cref="T:ApiRest.AutoMapperModelProfile"/>.
            </summary>
        </member>
        <member name="T:ApiRest.Controllers.AdminController">
            <summary>
            Controller to manage all related to user and roles.
            This is only accessible with an administrator grant.
            </summary>
        </member>
        <member name="M:ApiRest.Controllers.AdminController.#ctor(AutoMapper.IMapper,Repository.Interfaces.IUserRepository,Microsoft.AspNetCore.Routing.LinkGenerator)">
            <summary>
            Creates a new instance of <see cref="T:ApiRest.Controllers.AdminController"/>.
            </summary>
        </member>
        <member name="M:ApiRest.Controllers.AdminController.Post(Models.CreateUserModel)">
            <summary>
            Creates a <see cref="T:Repository.Entities.User"/> in the database.
            </summary>
            <param name="model">Information about the user to create.</param>
            <remarks>
            SAMPLE REQUEST \
            POST api/Admin \
            { \
                "email": "email",
                "roleId": 1,
                "username": "name",
                "password": "pass"
            }
            </remarks>
            <response code="200">Returns information created.</response>
        </member>
        <member name="M:ApiRest.Controllers.AdminController.Get">
            <summary>
            Gets all the information related to <see cref="T:Repository.Entities.User"/>, included roles and balances.
            </summary>
        </member>
        <member name="M:ApiRest.Controllers.AdminController.GetRoles">
            <summary>
            Gets all the <see cref="T:Repository.Entities.Role"/> in the database.
            </summary>
        </member>
        <member name="M:ApiRest.Controllers.AdminController.DeleteUser(System.Int32)">
            <summary>
            Deletes an user from the database.
            </summary>
            <param name="userId">Id of the user to delete.</param>
        </member>
        <member name="T:ApiRest.Controllers.AuthController">
            <summary>
            Controller to manage all related to Login in the api.
            </summary>
        </member>
        <member name="M:ApiRest.Controllers.AuthController.#ctor(Repository.Interfaces.IUserRepository,Domain.Interfaces.IJwtUtils,Microsoft.Extensions.Options.IOptions{Models.JwtConfigModel})">
            <summary>
            Creates a new instance of <see cref="T:ApiRest.Controllers.AuthController"/>.
            </summary>
        </member>
        <member name="M:ApiRest.Controllers.AuthController.Login(Models.LoginModel)">
            <summary>
            Creates and returns a Jwt to access the endpoints.
            </summary>
            <param name="model">Needed information to login and get the token.</param>
            <response code="200">Returns the json web token.</response>
            <response code="401">The information provided does not match with the database info.</response>
        </member>
        <member name="T:ApiRest.Controllers.BalancesController">
            <summary>
            Controller to manage the Users.
            </summary>
        </member>
        <member name="M:ApiRest.Controllers.BalancesController.#ctor(Repository.Interfaces.IUserRepository,AutoMapper.IMapper,Microsoft.AspNetCore.Routing.LinkGenerator)">
            <summary>
            Creates a new instance of <see cref="T:ApiRest.Controllers.BalancesController"/>.
            </summary>
        </member>
        <member name="M:ApiRest.Controllers.BalancesController.Get(System.String)">
            <summary>
            Gets all the balances for a <see cref="T:Repository.Entities.User"/>.
            </summary>
            <param name="username">Username which you want to get the information.</param>
        </member>
        <member name="M:ApiRest.Controllers.BalancesController.GetCurrentBalance(System.String)">
            <summary>
            Gets the total amount of the balances for a <see cref="T:Repository.Entities.User"/>.
            </summary>
            <param name="username">Username which you want to get the information.</param>
        </member>
        <member name="M:ApiRest.Controllers.BalancesController.TransferBalance(System.String,Models.BalanceSheetTransferModel)">
            <summary>
            Creates a new <see cref="T:Repository.Entities.BalanceSheet"/> for a <see cref="T:Repository.Entities.User"/>.
            </summary>
            <param name="username">Username to transfer the balance.</param>
            <param name="model">Information to transfer.</param>
            <remarks>
            SAMPLE REQUEST \
            POST /api/Users/1/Balances \
            { \
                "amount": 150
            }
            </remarks>
            <response code="200">Information created.</response>
        </member>
        <member name="M:ApiRest.Controllers.BalancesController.Delete(System.Int32)">
            <summary>
            Deletes a BalanceSheet from the database.
            </summary>
            <param name="balanceId">Id for the balance to delete.</param>
        </member>
        <member name="M:ApiRest.Controllers.BalancesController.GetCurrentUserName">
            <summary>
            Gets and returns the username from the claims in the header.
            </summary>
        </member>
        <member name="T:ApiRest.Controllers.RolesController">
            <summary>
            Controller to manage the roles for the users.
            </summary>
        </member>
        <member name="M:ApiRest.Controllers.RolesController.#ctor(Repository.Interfaces.IUserRepository)">
            <summary>
            Creates a new instance of <see cref="T:ApiRest.Controllers.RolesController"/>
            </summary>
        </member>
        <member name="M:ApiRest.Controllers.RolesController.Patch(System.String,System.Int32)">
            <summary>
            Changes the role for a user.
            </summary>
            <param name="username">Username which will be updated.</param>
            <param name="newRole">Id of the new role to assign.</param>
        </member>
        <member name="T:ApiRest.Program">
            <summary>
            Class that inicialize the project.
            </summary>
        </member>
        <member name="M:ApiRest.Program.Main(System.String[])">
            <summary>
            Main method to create the project.
            Ensures that the database is created before it is needed.
            </summary>
        </member>
        <member name="M:ApiRest.Program.CreateHostBuilder(System.String[])">
            <summary>
            Creates a host builder, configuring the web application.
            </summary>
        </member>
        <member name="T:ApiRest.Startup">
            <summary>
            Class to configure all the application.
            </summary>
        </member>
        <member name="M:ApiRest.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Creates a new instance of <see cref="T:ApiRest.Startup"/>
            </summary>
        </member>
        <member name="M:ApiRest.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configure all the services in the web app.
            </summary>
        </member>
        <member name="M:ApiRest.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Configure all the middlewares in the application.
            </summary>
        </member>
    </members>
</doc>
